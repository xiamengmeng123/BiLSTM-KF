environment:pytorch=2.4.0   cuda=12.1  python=3.9  gromacs=2019.6 mpi并行版

1.通过贝叶斯优化寻找最佳参数
srun -N 1 -p $gpu_partition --cpus-per-gpu=4 --gpus-per-node=1  python bayesian_optimizer.py
#其中bayesian_optimizer.py调用的是train_bayesian.py中的train函数，输出在lstm_loss_log.txt中


2.确定好参数后运行
2.1 for i in `seq 0 15`;do cp -rf sub.sh sub$i.sh;done

2.2 先将md$i.xvg文件中的对应参数提取出来，传给sub$i.sh
for i in `seq 0 15`;do srun -N 1 -p $partition python ready_param_for_sub.py $i;done
#srun -N 1 -p cp1 python ready_param_for_sub.py  $lambda_param

2.3 仔细核对参数再提交任务，不能一起跑，不然模型要全部保存到一起了；可以将每个sub$i.sh的内容全部复制到sub.sh下面，依次运行
cat sub0.sh sub1.sh sub2.sh sub3.sh sub4.sh sub5.sh sub6.sh sub7.sh sub8.sh sub9.sh sub10.sh sub11.sh sub12.sh sub13.sh sub14.sh sub15.sh> merged_sub.sh
sbatch -p $gpu_partition  merged_sub.sh  或者 sub$i.sh 

2.4 进入data/prediction，统计0-20窗口的预测能量
gmx_mpi bar -f *.xvg -o -oi -oh